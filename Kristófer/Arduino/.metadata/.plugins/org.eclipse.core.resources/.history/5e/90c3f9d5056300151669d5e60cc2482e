/*
 * Main code for arduino based morse decoder
 *
 * --------------- Group info -------------------
 * Freyja Yeatman
 * Kristofer Reykjalin
 * Robert Bjarnar
 * Stefan Oli
 * ----------------------------------------------
 *
 * --------------- SVN info ---------------------
 * $Id: lab03.ino 1221 2015-09-24 17:36:47Z kristofert13 $
 * $HeadURL: https://repository.cs.ru.is/svn/t-411-mech-2015/submit/lab3/freyja10-roberto12-kristofert13-stefanv13/lab03/lab03.ino $
 * $LastChangedDate: 2015-09-24 17:36:47 +0000 (Thu, 24 Sep 2015) $
 * $LastChangedRevision: 1221 $
 * $LastChangedBy: kristofert13 $
 * ----------------------------------------------
 */
#include "Morse.h"
#include <LiquidCrystal.h>
#include "Button.h"
#include "MorseElements.h"

Morse morse;
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
Button but(9);
MorseElements me(10);
int butState;


// Events and flags
int waitForRise = 1;
int risingEdge = 3;
int fallingEdge = 4;

int noEvent = 0;
int noFlag = -1;
int buttonPressed = 2;

int EOCDetected = 5;
int EOWDetected = 8;
int EOCWaitRise = 3;
int EOCWaitFall = 4;

int charSpaceDetected;
int wordSpaceDetected;

int endOfWordFlag = 7;
int endOfCharacterFlag = 14;
int badSpaceFlag = 22;
int badPulseFlag = 23;

int calCompleted = 10;
int calCompletedFlag = 11;
int calWaitFall = 2;
int calWaitRise = 1;
int calInProgress = 21;

int dotDetected = 1;
int dashDetected = 2;

int decodeWaitFall = 6;
int decodeWaitRise = 5;


//The setup function is called once at startup of the sketch
void setup()
{
	charSpaceDetected = 3;
	wordSpaceDetected = 4;
	// Add your initialization code here
	Serial.begin(9600);
	but.initBut();
	displayInit();
	//pinMode(10, INPUT);
}



// The loop function is called in an endless loop
void loop()
{
	/**
	 * Main function - undecided
	 */
	// Check for button events
	//lcd.print(me.chkMorseEvnts());
	//lcd.print("        ");

	if (but.chkBtnEvnts() == HIGH) {
		me.startCalibration();
	}
	switch (me.chkMorseEvnts()) {
		case 1: // dotDetected
			morse.addDot();
			//lcd.print("    LOW     ");
			//lcd.print("wordSpaceDet");
			//lcd.print("calwaitrise");
			break;
		case 2: // dashDetected
			morse.addDash();
			//lcd.print("calCompleted");
			//lcd.print("          ");
			//lcd.print("calwaitfall");
			break;
		case 3: // charSpaceDetected
			char alpha;
			alpha = DecodeMorse();
			if (alpha != '\0') {
				write(alpha);
			}
			else {
				write('?');
			}
			//lcd.print("EOCwaitrise");
			break;
		case 4: // wordSpaceDetected
			write(' ');
			//lcd.print("eocwaitfall");
			break;
		case 5:
			lcd.print("decodewaitrise");
			break;
		case 6:
			lcd.print("decodewaitfall");
			break;
		case -1:
			lcd.print("noflag        ");
			break;
		case 11:
			lcd.print("calComplFlag");
			break;
		case 14:
			lcd.print("endofcharflag");
			break;
		case 7:
			lcd.print("endofwordflag");
			break;
		case 22:
			lcd.print("badSpace");
			break;
		case 23:
			lcd.print("badPulse");
			break;
		case 33:
			//lcd.print("dot          ");
			break;
		case 34:
			//lcd.print("dash         ");
			break;
		case 10:
			lcd.print("calCompleted  ");
			break;
		case 21:
			lcd.print("calinprogress");
			break;
		case 0:
			//lcd.print("noevent      ");
			break;
		default:
			lcd.print("default         ");
			break;
	}
//	int val = me.testCalibration();
//	lcd.print(val);
//	lcd.print("            ");
//	Serial.println(val);
	//lcd.setCursor(0,0);
	/**
	 * Read output test - Working
	 */
//	if(digitalRead(10) == HIGH) {
//		Serial.println("HIGH");
//		lcd.print("HIGH");
//	} else if(digitalRead(10) == LOW) {
//		Serial.println("LOW");
//		lcd.print("LOW ");
//	} else {
//		Serial.println("um....wut?");
//	}
	/**
	 * Digital Read test - Working
	 */
	//lcd.print(digitalRead(10));
	//Serial.println(digitalRead(10));

	/**
	 * Button test - simply weird...
	 */
//	butState = but.chkBtnEvnts();
//	//int butState = but.read();
//	//lcd.print(but.getLstSmpl());
////	if(but.getDeb() < millis() - but.getLstSmpl()) {
////		but.setCurrState(but.read());
////		if(but.getLstState() != but.getCurrState()) {
////			if(but.read() == HIGH) {
////				lcd.print("HIGH");
////			} else if (but.read() == LOW) {
////				lcd.print("LOW ");
////			} else {
////				lcd.print("WTF?");
////			}
////			but.setLstState(but.getCurrState());
////			but.setLstSmpl(millis());
////		}
////	}
//
//	if(butState == HIGH) {
//		lcd.print("HIGH");
//	} else if (butState == LOW) {
//		lcd.print("LOW ");
//	} else {
//		lcd.print("WTF?");
//	}
//
//	lcd.setCursor(0,0);
}

// This function clears the morse string variable
void ClearMorseChar() {
	//morseString = "";
}

//
bool AddDot() {
	return morse.addDot();
}

bool AddDash() {
	return morse.addDash();
}

char DecodeMorse() {
	return morse.getLetter();
}

void displayInit() {
	lcd.clear();
	lcd.begin(16, 1);
	lcd.setCursor(16,0);
	lcd.autoscroll();
}

// This function writes the character to the display - question is whether we only need to print out the word
void write(char value) {
	// Don't we need to specify the cursor placing if we are writing only the character to the display
	lcd.print(value);
}
