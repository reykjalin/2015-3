/*
 * --------------- SVN info ---------------------
 * $Id: Button.cpp 1094 2015-09-22 21:12:32Z kristofert13 $
 * $HeadURL: https://repository.cs.ru.is/svn/t-411-mech-2015/submit/lab3/freyja10-roberto12-kristofert13-stefanv13/lab03/Button.cpp $
 * $LastChangedDate: 2015-09-22 21:12:32 +0000 (Tue, 22 Sep 2015) $
 * $LastChangedRevision: 1094 $
 * $LastChangedBy: kristofert13 $
 * ----------------------------------------------
 */

#include "Button.h"

 void Button::setDeb(int value) {
 	debounce = value;
 }
 int Button::getDeb() {
 	return debounce;
 }

 void Button::setCurrState(int value) {
 	currBtnState = value;
 }
 int Button::getCurrState() {
 	return currBtnState;
 }

 void Button::setLstState(int value) {
 	lstBtnState = value;
 }
 int Button::getLstState() {
 	return lstBtnState;
 }

 void Button::setLstSmpl(int value) {
 	lstSmplTm = value;
 }
 int Button::getLstSmpl() {
 	return lstSmplTm;
 }

 void Button::initBut() {
 	// Initialize the port line to monitor the button
	pinMode(pin, INPUT);
	// Initialize button state and sample time
	setLstState(digitalRead(pin));
	setLstSmpl(millis());
 }

int Button::chkBtnEvnts() {
	int returnVal = 0;
	setCurrState(digitalRead(pin));
	if (getDeb() > millis() - getLstSmpl()) {
		if (getBtnState() != getLstState()) {
			if (getCurrState() == HIGH) {
				returnVal = 1;
			}
			else {
				returnVal = 2;
			}
			setLstState(currBtnState());
		}
		setLstSmpl(millis());
	}
	return returnVal;
}
