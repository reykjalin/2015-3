/**
 * Main code for arduino based morse decoder
 *
 * --------------- Group info -------------------
 * Freyja Yeatman
 * Kristófer Reykjalín
 * Róbert Bjarnar
 * Stefán Óli
 * ----------------------------------------------
 *
 * --------------- SVN info ---------------------
 * $Id: lab03.ino 1172 2015-09-23 23:23:31Z roberto12 $
 * $HeadURL: https://repository.cs.ru.is/svn/t-411-mech-2015/submit/lab3/freyja10-roberto12-kristofert13-stefanv13/lab03/lab03.ino $
 * $LastChangedDate: 2015-09-23 23:23:31 +0000 (Wed, 23 Sep 2015) $
 * $LastChangedRevision: 1172 $
 * $LastChangedBy: roberto12 $
 * ----------------------------------------------
 */
#include "Morse.h"
#include <LiquidCrystal.h>
#include "Button.h"
#include "MorseElements.h"

Morse morse;
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
Button but(9);
MorseElements me(10);

//CONSTANTS
const int BUTTON_MORSE = 10;
const int DEBOUNCE = 50;

/*-------- INITIALIZE RELEVANT VARIABLES, EVENTS, FLAGS, STATES AND TIMINGS --------*/
// VARIABLES
int currentState;
int lastState;
int nextState;
int waitForRise;
int firstDelta;
int timeOfLastRise;
int timeOfLastFall;
int currentTime;
int lastPulseWidth;

// EVENTS
int noEvent = 0; 
int buttonDown;
int buttonUp;
int dotDetected = 1;
int dashDetected = 2;
int charSpaceDetected = 3;
int wordSpaceDetected = 4;
int risingEdge;
int fallingEdge;
int calCompleted;
int EOCDetected;
int EOWDetected;
int buttonPressed;

// FLAGS
int endOfWordFlag;
int dotDetectedFlag;
int dashDetectedFlag;
int calCompletedFlag;
int noFlag;
int badPulseFlag;
int badSpaceFlag;

// STATES
int calWaitRise;
int calWaitFall;
int EOCWaitRise;
int EOCWaitFall;
int decodeWaitRise;
int decodeWaitFall;
int calInProgress;

// TIMINGS
int dotTime;
int dashTime;
int charTime;
int wordTime;

// STRINGS and CHAR ARRAYS
String morseString;


//The setup function is called once at startup of the sketch
void setup()
{
	// Add your initialization code here
	Serial.begin(9600);
	but.initBut();
	displayInit();
}



// The loop function is called in an endless loop
void loop()
{
	// INITIALIZE
	but.initBut();
	me.initialize();
	// Check for button events
	if (but.chkBtnEvnts() == buttonDown) {
		me.startCalibration();
	}
		me.startCalibration();
	switch (me.chkMorseEvnts()) {
	case 1: // dotDetected
		morse.addDot();
		break;
	case 2: // dashDetected
		morse.addDash();
		break;
	case 3: // charSpaceDetected
		char alpha;
		alpha = DecodeMorse();
		if (alpha != '\0') {
			write(alpha);
		}
		else {
			write('?');
		}
		break;
	case 4: // wordSpaceDetected
		write(' ');
		break;
	default:
		write('d');
		break;
	}
}

// This function clears the morse string variable
void ClearMorseChar() {
	morseString = "";
}

//
bool AddDot() {
	return morse.addDot();
}

bool AddDash() {
	return morse.addDash();
}

char DecodeMorse() {
	return morse.getLetter();
}

void displayInit() {
	lcd.clear();
	lcd.begin(16, 1);
	lcd.setCursor(0,0);
	lcd.autoscroll();
}

// This function writes the character to the display - question is whether we only need to print out the word
void write(char value) {
	// Don't we need to specify the cursor placing if we are writing only the character to the display
	lcd.print(value);
}

