/*
 * Main code for arduino based morse decoder
 *
 * --------------- Group info -------------------
 * Freyja Yeatman
 * Kristofer Reykjalin
 * Robert Bjarnar
 * Stefan Oli
 * ----------------------------------------------
 *
 * --------------- SVN info ---------------------
 * $Id: lab03.ino 1221 2015-09-24 17:36:47Z kristofert13 $
 * $HeadURL: https://repository.cs.ru.is/svn/t-411-mech-2015/submit/lab3/freyja10-roberto12-kristofert13-stefanv13/lab03/lab03.ino $
 * $LastChangedDate: 2015-09-24 17:36:47 +0000 (Thu, 24 Sep 2015) $
 * $LastChangedRevision: 1221 $
 * $LastChangedBy: kristofert13 $
 * ----------------------------------------------
 */
#include "Morse.h"
#include <LiquidCrystal.h>
#include "Button.h"
#include "MorseElements.h"

Morse morse;
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
Button but(9);
MorseElements me(10);
int butState;


////CONSTANTS
//const int BUTTON_MORSE = 10;
//const int DEBOUNCE = 50;
//
///*-------- INITIALIZE RELEVANT VARIABLES, EVENTS, FLAGS, STATES AND TIMINGS --------*/
//// VARIABLES
//int currentState;
//int lastState;
//int nextState;
//int waitForRise;
//int firstDelta;
//int timeOfLastRise;
//int timeOfLastFall;
//int currentTime;
//int lastPulseWidth;
//
//// EVENTS
//int noEvent = 0;
////int buttonDown;
////int buttonUp;
//int dotDetected = 1;
//int dashDetected = 2;
//int charSpaceDetected = 3;
//int wordSpaceDetected = 4;
//int risingEdge;
//int fallingEdge;
//int calCompleted;
//int EOCDetected;
//int EOWDetected;
//int buttonPressed;
//
//// FLAGS
//int endOfWordFlag;
//int dotDetectedFlag;
//int dashDetectedFlag;
//int calCompletedFlag;
//int noFlag;
//int badPulseFlag;
//int badSpaceFlag;
//
//// STATES
//int calWaitRise;
//int calWaitFall;
//int EOCWaitRise;
//int EOCWaitFall;
//int decodeWaitRise;
//int decodeWaitFall;
//int calInProgress;
//
//// TIMINGS
//int dotTime;
//int dashTime;
//int charTime;
//int wordTime;
//
//// STRINGS and CHAR ARRAYS
//String morseString;


//The setup function is called once at startup of the sketch
void setup()
{
	// Add your initialization code here
	Serial.begin(9600);
	but.initBut();
	displayInit();
	//pinMode(10, INPUT);
}



// The loop function is called in an endless loop
void loop()
{
	/**
	 * Main function - undecided
	 */
	// Check for button events
	if (but.chkBtnEvnts() == HIGH) {
		me.startCalibration();
	}
	switch (me.chkMorseEvnts()) {
		case HIGH:
			lcd.print("    HIGH");
			break;
		case LOW: // dotDetected
			//morse.addDot();
			lcd.print("    LOW     ");
			break;
		case 2: // dashDetected
			//morse.addDash();
			lcd.print(me.chkMorseEvnts());
			lcd.print("          ");
			break;
		case 3: // charSpaceDetected
			char alpha;
			alpha = DecodeMorse();
			if (alpha != '\0') {
				write(alpha);
			}
			else {
				write('?');
			}
			break;
		case 4: // wordSpaceDetected
			write(' ');
			break;
		default:
			//write('');
			break;
	}
//	int val = me.testCalibration();
//	lcd.print(val);
//	lcd.print("            ");
//	Serial.println(val);
	lcd.setCursor(0,0);
	/**
	 * Read output test - Working
	 */
//	if(digitalRead(10) == HIGH) {
//		Serial.println("HIGH");
//		lcd.print("HIGH");
//	} else if(digitalRead(10) == LOW) {
//		Serial.println("LOW");
//		lcd.print("LOW ");
//	} else {
//		Serial.println("um....wut?");
//	}
	/**
	 * Digital Read test - Working
	 */
	//lcd.print(digitalRead(10));
	//Serial.println(digitalRead(10));

	/**
	 * Button test - simply weird...
	 */
//	butState = but.chkBtnEvnts();
//	//int butState = but.read();
//	//lcd.print(but.getLstSmpl());
////	if(but.getDeb() < millis() - but.getLstSmpl()) {
////		but.setCurrState(but.read());
////		if(but.getLstState() != but.getCurrState()) {
////			if(but.read() == HIGH) {
////				lcd.print("HIGH");
////			} else if (but.read() == LOW) {
////				lcd.print("LOW ");
////			} else {
////				lcd.print("WTF?");
////			}
////			but.setLstState(but.getCurrState());
////			but.setLstSmpl(millis());
////		}
////	}
//
//	if(butState == HIGH) {
//		lcd.print("HIGH");
//	} else if (butState == LOW) {
//		lcd.print("LOW ");
//	} else {
//		lcd.print("WTF?");
//	}
//
//	lcd.setCursor(0,0);
}

// This function clears the morse string variable
void ClearMorseChar() {
	//morseString = "";
}

//
bool AddDot() {
	return morse.addDot();
}

bool AddDash() {
	return morse.addDash();
}

char DecodeMorse() {
	return morse.getLetter();
}

void displayInit() {
	lcd.clear();
	lcd.begin(16, 1);
	lcd.setCursor(0,0);
	//lcd.autoscroll();
}

// This function writes the character to the display - question is whether we only need to print out the word
void write(char value) {
	// Don't we need to specify the cursor placing if we are writing only the character to the display
	lcd.print(value);
}
